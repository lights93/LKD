Interrupts and Interrupts Handlers

Interrupts

	Interrupts enable hardware to signal to processor

	the kernel can be interrupted at any time to process interrupts

	interrupt is physically produced by electronic signals originating from hardware devices
	directed into input pins on an interrupt controller
	upon receiving an interrupt, the interrupt controller sends a signal to the processor
	processor notify the OS that an interrupt has occurred
	OS can handle the interrupt appropriately

	Different devices can be associated with different interrupts by means of unique value associated with interrupt
	-> enable the OS to differentiate between interrupts and know which hardware device caused the interrupt

	IRQ(interrupt request) lines - each interrupt with its corresponding handler value

	specific interrupt is associated with a specific device, and the kernel know this

Exceptions

	exceptions occur synchronously with respect to the processor clock

	exceptions are produced by the processor while executing instructions either in Programming error(ex. divide by zero)
	or abnormal conditions that must be handled by the kernel(ex. page fault)

	many processor architectures handle exceptions in a similar manner to interrupts